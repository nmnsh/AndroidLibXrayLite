name: Build AndroidLibXrayLite and Release

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: '11'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        sdk-version: '31.0.0'
        ndk-version: '23.1.7779620'
        android-platform: 'android-19'

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.19'

    - name: Set up gomobile
      run: go install golang.org/x/mobile/cmd/gomobile@latest

    - name: Build AndroidLibXrayLite
      run: |
        echo "================================================"
        echo "================================================"
        ls
        echo "================================================"
        echo "================================================"
        ls
        gomobile init
        go mod tidy -v
        mkdir build
        gomobile bind -v -androidapi 19 -ldflags='-s -w' ./
        echo "================================================"
        echo "================================================"
        ls
        echo "================================================"
        echo "================================================"

        echo "RELEASE_VERSION=v$(date '+%Y-%m-%d')-release" >> $RUNNER_TEMP/release.env

    - name: Load Release Version
      id: release_env
      run: echo ::set-output name=release_version::$(cat $RUNNER_TEMP/release.env)
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release 1.0.0
        body: This is a test release.

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./libv2ray.aar
        asset_name: libv2ray.aar
        asset_content_type: application/octet-stream
